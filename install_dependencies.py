#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è VPN Telegram Bot
"""

import subprocess
import sys
import os
from pathlib import Path

def install_package(package):
    """Install a package using pip with --break-system-packages flag"""
    try:
        # Try with --break-system-packages flag for externally managed environments
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", package, "--break-system-packages"
        ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        return True
    except subprocess.CalledProcessError:
        # Fallback to regular pip install
        try:
            subprocess.check_call([
                sys.executable, "-m", "pip", "install", package
            ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            return True
        except subprocess.CalledProcessError:
            return False

def check_virtual_env():
    """Check if we're in a virtual environment"""
    return hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)

def main():
    """Main installation function"""
    print("üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è VPN Telegram Bot...\n")
    
    # Check if requirements.txt exists
    requirements_file = Path("requirements.txt")
    if not requirements_file.exists():
        print("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # Check virtual environment
    in_venv = check_virtual_env()
    if not in_venv:
        print("‚ö†Ô∏è  –í—ã –Ω–µ –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏.")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   python3 -m venv venv")
        print("   source venv/bin/activate")
        print("   python install_dependencies.py")
        print("\nüîß –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å —Ñ–ª–∞–≥–æ–º --break-system-packages...\n")
    
    # Read requirements
    with open(requirements_file, 'r') as f:
        packages = [line.strip() for line in f if line.strip() and not line.startswith('#')]
    
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ {len(packages)} –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:\n")
    
    # Install packages
    failed_packages = []
    for i, package in enumerate(packages, 1):
        print(f"[{i}/{len(packages)}] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {package}...", end=' ')
        if install_package(package):
            print("‚úÖ")
        else:
            print("‚ùå")
            failed_packages.append(package)
    
    # Results
    print(f"\n{'='*50}")
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –£–°–¢–ê–ù–û–í–ö–ò")
    print('='*50)
    
    if not failed_packages:
        print("üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("\n‚úÖ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:")
        print("   python3 run.py")
        print("\nüìã –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:")
        print("   python3 test_setup.py")
        return True
    else:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {len(failed_packages)} –ø–∞–∫–µ—Ç–æ–≤:")
        for package in failed_packages:
            print(f"   ‚ùå {package}")
        
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   python3 -m venv venv")
        print("   source venv/bin/activate")
        print("   python install_dependencies.py")
        print("\n2. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:")
        print("   sudo apt update")
        print("   sudo apt install python3-pip python3-venv")
        
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1)