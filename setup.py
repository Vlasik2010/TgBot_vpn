#!/usr/bin/env python3
"""
VPN Bot Setup Script
Helps configure and initialize the VPN Telegram Bot
"""

import os
import sys
from pathlib import Path

def create_env_file():
    """Create .env file with user input"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞...\n")
    
    # Get Telegram Bot Token
    bot_token = input("üì± –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather): ").strip()
    if not bot_token:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return False
    
    # Get Admin IDs
    admin_ids = input("üëë –í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
    if not admin_ids:
        print("‚ùå –•–æ—Ç—è –±—ã –æ–¥–∏–Ω ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return False
    
    # Get VPN server info
    vpn_server = input("üåê VPN —Å–µ—Ä–≤–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä: vpn.example.com) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: demo.vpn.com]: ").strip()
    if not vpn_server:
        vpn_server = "demo.vpn.com"
    
    # Database choice
    print("\nüìÑ –í—ã–±–µ—Ä–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:")
    print("1. SQLite (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –Ω–∞—á–∞–ª–∞)")
    print("2. PostgreSQL")
    db_choice = input("–í–∞—à –≤—ã–±–æ—Ä (1-2) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1]: ").strip()
    
    if db_choice == "2":
        db_host = input("üóÑÔ∏è  PostgreSQL —Ö–æ—Å—Ç [localhost]: ").strip() or "localhost"
        db_name = input("üóÑÔ∏è  –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö [vpn_bot]: ").strip() or "vpn_bot"
        db_user = input("üóÑÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î [postgres]: ").strip() or "postgres"
        db_pass = input("üóÑÔ∏è  –ü–∞—Ä–æ–ª—å –ë–î: ").strip()
        database_url = f"postgresql://{db_user}:{db_pass}@{db_host}/{db_name}"
    else:
        database_url = "sqlite:///vpn_bot.db"
    
    # Payment settings
    print("\nüí≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):")
    yoomoney_token = input("üí∞ YooMoney —Ç–æ–∫–µ–Ω [–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å]: ").strip()
    qiwi_token = input("üí∞ QIWI —Ç–æ–∫–µ–Ω [–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å]: ").strip()
    
    # Debug mode
    debug_mode = input("\nüêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏? (y/n) [n]: ").strip().lower()
    debug = "True" if debug_mode in ['y', 'yes', '–¥–∞'] else "False"
    
    # Create .env content
    env_content = f"""# Telegram Bot Configuration
BOT_TOKEN={bot_token}
ADMIN_IDS={admin_ids}

# Database Configuration
DATABASE_URL={database_url}

# Payment Configuration
YOOMONEY_TOKEN={yoomoney_token or 'your_yoomoney_token'}
QIWI_TOKEN={qiwi_token or 'your_qiwi_token'}

# VPN Configuration
VPN_SERVER_URL={vpn_server}
VPN_API_KEY=your_vpn_api_key

# Bot Configuration
DEFAULT_LANGUAGE=ru
DEBUG={debug}
LOG_LEVEL=INFO

# Subscription Plans (in rubles)
PLAN_1_MONTH_PRICE=299
PLAN_3_MONTH_PRICE=799
PLAN_6_MONTH_PRICE=1499
PLAN_12_MONTH_PRICE=2699
"""
    
    # Write .env file
    with open('.env', 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    return True


def create_directories():
    """Create necessary directories"""
    print("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫...")
    
    directories = ['logs', 'data', 'backups']
    
    for directory in directories:
        Path(directory).mkdir(exist_ok=True)
        print(f"  ‚úÖ {directory}/")
    
    print("‚úÖ –ü–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!")


def setup_database():
    """Initialize database"""
    print("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from bot.models.database import DatabaseManager
        from bot.config.settings import Config
        
        db_manager = DatabaseManager(Config.DATABASE_URL)
        db_manager.create_tables()
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        return False


def test_configuration():
    """Test bot configuration"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        from bot.config.settings import Config
        Config.validate()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
        
        from bot.main import create_application
        app = create_application()
        print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False


def main():
    """Main setup function"""
    print("üöÄ –ú–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN Telegram Bot")
    print("=" * 40)
    
    # Check if .env already exists
    if os.path.exists('.env'):
        overwrite = input("‚ö†Ô∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/n): ").strip().lower()
        if overwrite not in ['y', 'yes', '–¥–∞']:
            print("‚ÑπÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            return
    
    # Step 1: Create configuration
    if not create_env_file():
        return
    
    print()
    
    # Step 2: Create directories
    create_directories()
    
    print()
    
    # Step 3: Setup database
    if not setup_database():
        print("‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î...")
    
    print()
    
    # Step 4: Test configuration
    if test_configuration():
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìñ –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:")
        print("   python run.py")
        print("   –∏–ª–∏")
        print("   python -m bot.main")
        print("\nüìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   python test_bot.py          - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
        print("   python validate_bot.py      - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
    else:
        print("\n‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


if __name__ == '__main__':
    main()